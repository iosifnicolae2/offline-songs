/*
 *
 *  Air Horner
 *  Copyright 2015 Google Inc. All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the 'License');
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an 'AS IS' BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License
 *
 */
(function() {
  'use strict';
(function() {

  var deferredInstall;
  var promptTriggered = false;
  // The resolve function that will be called when we know we can prompt.
  var canPromptPromiseResolved;
  var canPromptPromise = new Promise(function(resolve, reject) {
    // The resolve will be called later when we know the prompt has been shown.
    // We might want to reject after a timeout of a couple of seconds.
    canPromptPromiseResolved = resolve;
  });


  window.addEventListener('beforeinstallprompt',function(e) {

    promptTriggered = true;

    // Stop it doing what it needs to do;
    e.preventDefault();
    deferredInstall = e;

    // Resolve the promise, to say that we know we can prompt.
    canPromptPromiseResolved();

    return false;
  });

  var install = {};

  Object.defineProperty(install, 'isAvailable', { get: function() { return promptTriggered; } });

  install.canPrompt = function() {
    return canPromptPromise;
  };

  install.prompt = function () {
    return new Promise(function(resolve, reject){
      if(promptTriggered === false) {
        // There can be a whole host or reasons, we should determine them
        reject('User Agent decided not to prompt');
      };

      deferredInstall.prompt().then(function() {
        return deferredInstall.userChoice
      }).then(function(choice) {
        resolve(choice.outcome);
      }).catch(function(reason) {
        reject(reason);
      });
    });
  };

  window.install = install;
})();


})();


var all_songs_have_been_downloaded = false;
var songs_json = {};
var songs_json_array = [];
var songs_loaded_queue = [];
var $songs_list_wrapper = $(".songs--list-wrapper");
var $song_viewer = $(".song--viewer");
var $song_viewer__title = $("#song-viewer--title");
var $song_viewer__category = $("#song-viewer--category");
var $song_viewer__text = $("#song-viewer--text");

$("#search-bar").keyup(function() {
  console.time('searchTime');
  var search_text = $(this).val();
  update_songs_list(search_text);
});
$("#song-viewer--close").click(function(event) {
  event.preventDefault();
  window.history.back();
});

$('#songs--wrapper').on('click', 'a.song-title', function(event) {
  event.preventDefault();
  var song_id = $(this).data('id');
  var song = songs_json[song_id];
  window.history.pushState('song' + song.id, song.name, '/view?id=' + song.id);
});

function download_all_songs() {
  console.info('download_all_songs');
  $.ajax({
      'async': true,
      'global': false,
      'url': 'api/view/all',
      'dataType': "json",
      'success': function (data) {
          songs_json = data;
          songs_json_array = toList(songs_json);
          songs_json_array.map((song) => {
            song.full_text = JSON.stringify(song).toLowerCase();
            return song;
          });
          all_songs_have_been_downloaded = true;
          console.info('songs_loaded_queue', songs_loaded_queue)
          songs_loaded_queue.forEach(function(details) {
            details['function'](details['param']);
          });
          songs_loaded_queue = [];
      }
  }).fail(function(error) {
      alert( "Nu am putut incarca lista de melodii!\nTe rog anunta-ma la adresa: iosifnicolae2@gmail.com" );
      console.error(error);
  });
}

function download_specific_song(song_id) {
  console.info('download_specific_song', song_id);
  if(all_songs_have_been_downloaded) {
    return;
  }
  $.ajax({
      'async': true,
      'global': false,
      'url': 'api/view?id='+song_id,
      'dataType': "json",
      'success': function (data) {
          var downloaded_song_id = data['id'];
          console.info(downloaded_song_id);
          songs_json = {};
          songs_json[downloaded_song_id] = data;
          songs_json_array = toList(songs_json);
          songs_json_array.map((song) => {
            song.full_text = JSON.stringify(song).toLowerCase();
            return song;
          });
          console.info('songs_loaded_queue', songs_loaded_queue)
          songs_loaded_queue.forEach(function(details) {
            details['function'](details['param']);
          });
          songs_loaded_queue = [];
      }
  }).fail(function(error) {
      alert( "Nu am putut incarca lista de melodii!\nTe rog anunta-ma la adresa: iosifnicolae2@gmail.com" );
      console.error(error);
  });
}

function update_songs_list(search_text) {
  if(all_songs_have_been_downloaded == false) {
    console.info('songs_loaded_queue')
    songs_loaded_queue.push({'function': update_songs_list,'param': search_text});
    console.info(songs_loaded_queue)
    download_all_songs();
    return;
  }
  search_text = search_text.toLowerCase();
    var selected_songs = songs_json_array.filter(function (song) {
        return song.full_text.search(search_text) > -1;
    });
    console.info(selected_songs)
    update_songs_list_view(selected_songs);
}


function update_songs_list_view(selected_songs) {
  $songs_list_wrapper.show();
  $song_viewer.hide();
  var $songs_list = $("#songs--list");
  $songs_list.empty();
  $.each(selected_songs, function(index, song) {
    $songs_list.append('<a href="/view?id=' + song.id +'" class="song-title" data-id=' + song.id + '>' + song.name + ' ' + song.number + '</a>')
  });
  console.timeEnd('searchTime');
}

function show_song_description(song_id) {
  $songs_list_wrapper.hide();
  $song_viewer.show();
  var song = songs_json[song_id];
  console.info('Show song details for:', song_id, song);

  if(typeof song == 'undefined') {
    songs_loaded_queue.push({'function': show_song_description,'param': song_id});
    download_specific_song(song_id);
    return;
  }
  $song_viewer__title.text(song['name'] + ' - ' + song['number']);
  $song_viewer__category.text(song['category']);
  $song_viewer__text.text(song['text']);
}

;(function($) {
  var app = $.sammy(function() {
          this.get('/', function() {
            // Show all available songs
            update_songs_list($('#search-bar').val());
          });
          this.get('/view', function() {
            show_song_description(this.params['id']);
          });
  });

  $(function() {
    app.run()
  });
})(jQuery);

// Utils
function toList(dict) {
    return Object.keys(dict).map(function (key) {
        return dict[key];
    });
}
